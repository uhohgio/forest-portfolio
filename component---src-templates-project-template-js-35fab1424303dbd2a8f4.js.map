{"version":3,"file":"component---src-templates-project-template-js-35fab1424303dbd2a8f4.js","mappings":"0MA2EA,UAnEwB,IAAe,IAAd,KAAEA,GAAM,EAE/B,MAAM,KAAEC,EAAI,YAAEC,GAAgBF,EAAKG,eAC7BC,GAAQC,EAAAA,EAAAA,GAASH,EAAYI,YAC7B,WAAEC,IAAeC,EAAAA,EAAAA,YAAWC,EAAAA,GAC5BC,GAAYC,EAAAA,EAAAA,cAAaC,IAC7B,GAAIL,GAAgC,oBAAXM,OAAwB,CACjC,IAAIC,MAAMF,GAClBG,OAAOC,MAAK,SAEfC,OAAMC,IACPC,QAAQC,MAAM,oDAAoDR,EAAG,IAAKM,EAAE,GAEhF,CACA,GACC,CAACX,IAaJ,OACE,gCACE,gBAAC,IAAM,KACL,6BAAQL,EAAYmB,MAAM,gCAC1B,wBAAMC,KAAK,cAAcC,QAASrB,EAAYsB,aAAW,iBAAqBtB,EAAYmB,MAAK,gCAE/F,wBAAMI,SAAS,WAAWF,QAASrB,EAAYmB,QAC/C,wBAAMI,SAAS,iBAAiBF,QAASrB,EAAYsB,aAAW,iBAAqBtB,EAAYmB,MAAK,gCACtG,wBAAMI,SAAS,WAAWF,QAASrB,EAAYwB,aAAe,yBAC9D,wBAAMD,SAAS,SAASF,QAASvB,EAAK2B,KAAKC,aAAaC,QAAU7B,EAAKG,eAAe2B,OAAOC,OAC7F,wBAAMN,SAAS,UAAUF,QAAQ,aAInC,uBAAKS,UAAWC,EAAAA,IACd,gBAAC,EAAAC,KAAI,CAACC,GAAG,YAAYH,UAAWC,EAAAA,GAA4BG,aA1B7C,KAChB7B,GACDG,EAAU,2BACZ,EAuB4F2B,QArBrE,KACpB9B,GACDG,EAAU,mBACZ,GAkBuH,sBAEnH,0BAAKR,EAAYmB,OACjB,qBAAGW,UAAWC,EAAAA,IAAqB,SAC1B/B,EAAYoC,KAAK,YAAUpC,EAAYqC,KAAKC,KAAK,OAGzDpC,GACC,gBAAC,EAAAqC,EAAW,CAACrC,MAAOA,EAAOsC,IAAKxC,EAAYmB,MAAOW,UAAWC,EAAAA,KAIhE,uBACED,UAAWC,EAAAA,GACXU,wBAAyB,CAAEC,OAAQ3C,MAMpC,C,uJCtEF,IAAI4C,EAAa,qCACbC,EAAkB,0CAClBC,EAAO,+BACPC,EAAc,sCACdC,EAAmB,0C","sources":["webpack://gatsby-starter-default/./src/templates/project-template.js","webpack://gatsby-starter-default/./src/templates/template.module.css"],"sourcesContent":["import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\r\nimport * as templateStyles from './template.module.css'; // Reusable styles for templates\r\nimport { Helmet } from 'react-helmet';\r\nimport GlobalContext from '../context/GlobalControls';\r\nimport { useCallback, useContext } from 'react';\r\n\r\nconst ProjectTemplate = ({ data }) => {\r\n  // data is the result of the GraphQL query defined at the bottom\r\n  const { html, frontmatter } = data.markdownRemark;\r\n  const image = getImage(frontmatter.thumbnail); // Get optimized image data\r\n  const { isVolumeOn } = useContext(GlobalContext);\r\n  const playAudio = useCallback((src) => {\r\n    if (isVolumeOn && typeof window !== 'undefined') {\r\n      const audio = new Audio(src);\r\n      audio.play().then(() => {\r\n        \r\n      }).catch(e => {\r\n        console.error(`[IndexPage-Local-Callback] Audio play failed for ${src}:`, e);\r\n      });\r\n    } else {\r\n    }\r\n  }, [isVolumeOn]);\r\n\r\n  const toggleButton = () => {\r\n   if (isVolumeOn) {\r\n      playAudio('/volume-toggle-sound.mp3');\r\n    }\r\n  }\r\n  const handleMouseClick = () => {\r\n   if (isVolumeOn) {\r\n      playAudio('/mouse-click.mp3');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{frontmatter.title} | Projects - Giovanna Ehrig</title>\r\n        <meta name=\"description\" content={frontmatter.description || `Details about ${frontmatter.title} project by Giovanna Ehrig.`} />\r\n        {/* Add Open Graph / Twitter Card meta for social sharing */}\r\n        <meta property=\"og:title\" content={frontmatter.title} />\r\n        <meta property=\"og:description\" content={frontmatter.description || `Details about ${frontmatter.title} project by Giovanna Ehrig.`} />\r\n        <meta property=\"og:image\" content={frontmatter.socialImage || 'URL to default image'} />\r\n        <meta property=\"og:url\" content={data.site.siteMetadata.siteUrl + data.markdownRemark.fields.slug} />\r\n        <meta property=\"og:type\" content=\"article\" />\r\n        {/* ... other meta tags */}\r\n      </Helmet>\r\n\r\n      <div className={templateStyles.pageContent}>\r\n        <Link to=\"/projects\" className={templateStyles.backButton}  onMouseEnter={toggleButton} onClick={handleMouseClick}>‚Üê Back to Projects</Link>\r\n\r\n        <h1>{frontmatter.title}</h1>\r\n        <p className={templateStyles.meta}>\r\n          Date: {frontmatter.date} | Tags: {frontmatter.tags.join(', ')}\r\n        </p>\r\n\r\n        {image && (\r\n          <GatsbyImage image={image} alt={frontmatter.title} className={templateStyles.projectThumbnail} />\r\n        )}\r\n\r\n        {/* Render Markdown content */}\r\n        <div\r\n          className={templateStyles.markdownContent}\r\n          dangerouslySetInnerHTML={{ __html: html }}\r\n        />\r\n\r\n        {/* Add links to live demo/repo if they are in your markdown */}\r\n        {/* You'd extract these from 'html' or add separate frontmatter fields for them */}\r\n      </div>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default ProjectTemplate;\r\n\r\n// GraphQL Query: Gatsby will inject this query's result into the 'data' prop\r\n// The '$slug' variable is passed to this query by gatsby-node.js\r\nexport const query = graphql`\r\n  query ProjectBySlug($slug: String!) {\r\n    site {\r\n        siteMetadata { \r\n        siteUrl\r\n        }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n        html\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        tags\r\n        description\r\n        socialImage { \r\n            childImageSharp {\r\n            gatsbyImageData(width: 1200, height: 630, layout: FIXED)\r\n            }\r\n        }\r\n        thumbnail {\r\n            childImageSharp {\r\n            gatsbyImageData(width: 800, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\r\n            }\r\n        }\r\n        }\r\n    }\r\n  }\r\n`;","// extracted by mini-css-extract-plugin\nexport var backButton = \"template-module--backButton--8fd2c\";\nexport var markdownContent = \"template-module--markdownContent--68367\";\nexport var meta = \"template-module--meta--1569f\";\nexport var pageContent = \"template-module--pageContent--64ad9\";\nexport var projectThumbnail = \"template-module--projectThumbnail--c4e3f\";"],"names":["data","html","frontmatter","markdownRemark","image","getImage","thumbnail","isVolumeOn","useContext","GlobalContext","playAudio","useCallback","src","window","Audio","play","then","catch","e","console","error","title","name","content","description","property","socialImage","site","siteMetadata","siteUrl","fields","slug","className","templateStyles","Link","to","onMouseEnter","onClick","date","tags","join","G","alt","dangerouslySetInnerHTML","__html","backButton","markdownContent","meta","pageContent","projectThumbnail"],"sourceRoot":""}